package AgenciaBancaria;

import ultilitarios.Utils;

public class Conta {
	static private int contadorDeContas =1;
	private int numeroConta;
	private Pessoa pessoa;
	private Double saldo=0.0; //saldo começa com 0, instanciando ele 
	
	public Conta (Pessoa pessoa) {
		this.numeroConta = contadorDeContas; //
		this.pessoa = pessoa;
		contadorDeContas +=1;
		
	}
	public int getNumeroConta () {
		return numeroConta;
	}
	public void setNumeroConta(int numeroConta) {
		this.numeroConta = numeroConta ;
	}
	public Pessoa getPessoa() {
		return pessoa;
	}
	public void setPessoa(Pessoa pessoa) {
		this.pessoa = pessoa;
	}
	public Double getSaldo() {
		return saldo;
	}
	public void setSaldo(Double saldo) {
		this.saldo = saldo;
	}
	public String toString() {
		return "\nNumero da conta" + this.getNumeroConta() +
				"\nNome: " + this.pessoa.getNome()+
				"\nCPF: " + this.pessoa.getCpf()+
				"\nEmail: " + this.pessoa.getEmail()+
				"\nSaldo: " + Utils.doubleToString(this.getSaldo())+ // para formatar o valor 
				"\n";
	}
	 
	public void depositar(Double valor) {
		//ser positivo 
		//paga o saldo q já tem e soma com valor
		if (valor>0) {
			setSaldo(getSaldo()+valor);
			System.out.print("Deposito realizado com sucesso!");
		}
		else {
			System.out.println("Não foi possivel realizar o depostito");
		}
		
	}
	public void sacar(Double valor) {
		if (valor>0 && this.getSaldo()>= valor) {
			setSaldo(getSaldo()-valor);//deixa sacar subtraindo saldo-valor
			System.out.print("Saque realizado com sucesso!");
		}
		else {
			System.out.println("Não foi possivel realizar o saque");
		}
			
		}
	public void transferir (Conta contaParaDeposito, Double valor) {
		if (valor>0 && this.getSaldo()>= valor) {
			setSaldo(getSaldo()-valor);
			//receber o valor transferido
			contaParaDeposito.saldo = contaParaDeposito.getSaldo()+valor;
			System.out.println("Transferencia realizada com sucesso");
		}
		else {
			System.out.println("Transferencia não realizada");
		}
		
	}
	
	
	
	
}
